{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20c00d34.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color, text, onClick }) => {\r\n    return (\r\n    <button \r\n    onClick = {onClick}\r\n    style= {{backgroundColor: color}}\r\n    className='btn'\r\n    >\r\n        {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func, \r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n    \r\n    return (\r\n       <header className = 'header'>\r\n           <h1>{title}</h1>\r\n           <Button color = {showAdd ? 'red' : 'green'} \r\n           text={showAdd ? 'Close':'Add'}\r\n            onClick={onAdd}/>\r\n           \r\n       </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n//CSS in JS\r\n//const headingStyle = {\r\n//    color: 'red',\r\n//    backgroundColor: 'black',\r\n//}\r\n\r\nexport default Header\r\n","import { FaTimes } from  'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className = {`task ${task.reminder ? 'reminder' : ''}`} \r\n        onDoubleClick={() =>\r\n         onToggle(task.id)}>\r\n            <h3>{task.text} <FaTimes \r\n            style={{ color : 'red', cursor: 'pointer'}} \r\n            onClick={() => onDelete(task.id)}  /></h3>\r\n            <p>{task.day}</p>\r\n             \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({tasks, onDelete, onToggle }) => {\r\n    \r\n    return (\r\n        <>\r\n          {tasks.map((task) => (\r\n          <Task key={task.id} task= {task} \r\n          onDelete={onDelete}\r\n          onToggle={onToggle}/> \r\n          ))}  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text){\r\n            alert('Please add a Task')\r\n            return\r\n        }\r\n\r\n        onAdd({ text, day, reminder })\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className= 'form-control'>\r\n                <label>Task</label>\r\n                <input type=\"text\" placeholder='Add Task'\r\n                value={text} \r\n                onChange={(e)=> setText(e.target.value)} />\r\n            </div>\r\n            <div className= 'form-control'>\r\n                <label>Day and Time</label>\r\n                <input type=\"text\" placeholder='Add Day & Time'\r\n                value={day} \r\n                onChange={(e)=> setDay(e.target.value)} />\r\n            </div>\r\n            <div className= 'form-control form-control-check'>\r\n                <label>SetReminder</label>\r\n                <input type=\"checkbox\" \r\n                checked={reminder}\r\n                value={reminder} \r\n                onChange={(e)=> setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n\r\n            <input type=\"submit\" value='Save  Task' className='btn btn-block' />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState (true)\n  const [tasks, setTasks] = useState([\n    {\n    id: 1,\n    text: 'Doctors Appointment',\n    day: 'Feb 5th at 2:30pm',\n    reminder: true ,\n},\n{\n    id: 2,\n    text: 'Meeting at School',\n    day: 'Feb 6th at 1:30pm',\n    reminder: true ,\n},\n{\n    id: 3,\n    text: 'Food Shopping',\n    day: 'Feb 5th at 2:30pm',\n    reminder: false ,\n}\n])\n\n// Add Task\nconst addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { id, ...task }\n    setTasks([...tasks, newTask])\n    \n}\n\n // Delete Task\n const deleteTask = (id) => {\n   setTasks(tasks.filter((task) => task.id !== id))\n }\n\n // Toggle Reminder\n const toggleReminder = (id) => {\n   setTasks(tasks.map((task) =>task.id === id ? \n   { ...task, reminder: !task.reminder }: task))\n }\n\n  return (\n    <div className='container'>\n     <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n     {showAddTask && <AddTask onAdd={addTask}/>}\n     {tasks.length > 0 ?\n     <Tasks tasks= {tasks} \n     onDelete ={deleteTask} \n     onToggle={toggleReminder}/> : 'No Tasks To Show'}\n    </div>\n  );\n}\n\n\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}